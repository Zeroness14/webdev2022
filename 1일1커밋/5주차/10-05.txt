웹 개발

웹개발은 크게 2가지로 나눌 수 있다: 프론트엔드(Frontend), 백엔드(Backend)
이에 따라, 웹 개발자도 크게 2가지로 나뉜다: 프론트엔드 개발자, 백엔드 개발자
예를 들어 서비스를 만든다고 했을 때, 웹개발 자체는 프론트엔드 개발팀과 백엔드 개발팀이 함께 소통하며 작업한다.

1. 프론트엔드 개발(Frontend Development)
프론트엔드 개발자들은 요소와 에셋(asset)들을 배치하고 디자인하며 정적/동적으로 페이지를 사용할 수 있도록 만드는 작업을 한다. 
유튜브 홈페이지의 일부분. 파란 부분이 asset들이라고 볼 수 있다.
이 작업은 페이지를 이용하는 사용자들에게 보여지는 모든 것들을 디자인하고 배치하는 것을 의미한다.
요소나 에셋들은 이미지(img) 또는 그래픽(svg), 텍스트(text), 영상(media), 영역(div) 등의 것들을 나타낸다.
아주 간단하고도 전통적인 방식의 개발 방식으로 설명하면, 프론트엔드 개발은 HTML, CSS, Javascript 이 3가지 언어로 구성된다.
HTML은 요소들을 배치하고 구조를 형성하기 위한 언어이다.
CSS는 배치된 요소들을 디자인하고 색을 입히고 꾸미기 위한 언어이다.
Javascript는 정적이고 단조로운 HTML 문서의 한계를 극복하기 위해 웹 브라우저(Chrome, Firefox 등) 자체의 내장 컴파일 기능을 이용하여 페이지를 동적으로 변형하고 이벤트를 발생시키는 스크립트 언어이다.
일반적으로 이 3가지 언어는 함께 쓰이며 모두 사용될 때에 최강의 효력을 발휘한다.
각각이 어떤 느낌인지는 다음 밈을 보면 어느정도 이해될 것이라고 생각한다.

웹 페이지를 작성 또는 개발하는 순서는 크게 다음과 같다.
1. HTML 코드로 페이지의 틀을 만든다.
2. CSS 코드로 그 페이지의 틀을 꾸미고 재배치한다.
3. Javascript 코드로 페이지를 동적으로 만든다.

2. 백엔드 개발(Backend Development)
백엔드 개발자들은 프론트엔드 페이지와 소통하고 내부적으로 데이터를 저장 및 관리, 분산, 처리하는 작업을 한다.
백엔드 개발은 프론트엔드와 다르게 사용자와 직접 맞닿는 부분이 매우 적거나 없다.
백엔드는 구조가 단순한 것부터 매우 복잡한 것까지 다양하며, 설계 또한 어려우므로 일반적으로 인프라 팀과 소통하여 구조를 구축한다.
데이터베이스, 프레임워크, 분산 처리 서버 등을 적절히 배치하여 서버 간의 효율적인 소통 방식을 설계하고 구현하는 작업들이므로 여러 요구조건들을 필요로 한다.
프론트엔드와 다르게 구조가 어떠냐에 따라 개발 순서도 천차만별로 달라진다.
보통 프레임워크 구성으로는 Node.js나 Spring, .NET, Laravel 등을 사용하고,
데이터베이스는 MySQL, MariaDB, MongoDB, LevelDB, Redis 등 다양하게 목적에 따라 사용한다.
분산처리나 데이터 관리 등은 ELK stack이나 Kafka, S3, Hadoop 등을 사용하는 것이 요즘 추세이다.